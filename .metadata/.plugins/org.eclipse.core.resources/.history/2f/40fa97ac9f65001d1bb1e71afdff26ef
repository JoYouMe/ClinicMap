package com.spring.clinicMap.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.spring.clinicMap.dto.MemberDTO;
import com.spring.clinicMap.dto.ResponseDTO;
import com.spring.clinicMap.entity.Member;
import com.spring.clinicMap.service.MemberService;



@RestController
@RequestMapping("/api/member")
public class MemberController {
	@Autowired
	private MemberService memberService;

	@Autowired
	private PasswordEncoder passwordEncoder;
	
	@PostMapping("/join")
	public ResponseEntity<?> join(@RequestBody Member member) {
		try {
			member.setPassword(passwordEncoder.encode(member.getPassword()));
			//회원 가입 후 가입된 회원 정보 받아오는 객체 생성
			Member joinMember = memberService.join(member);
			
			//리액트로 리턴해 줄 MemberDTO 객체 생성
			MemberDTO memberDTO = new MemberDTO();
			 
			//member는 리스트로 리턴되는 게 아니여서 responseBody에 memberDTO를 담아서 리턴
			memberDTO.setId(joinMember.getId());
			memberDTO.setUsername(joinMember.getUsername());
			memberDTO.setRole(joinMember.getRole());
			
			return ResponseEntity.ok().body(memberDTO);
		} catch(Exception e) {
			ResponseDTO<MemberDTO> response = new ResponseDTO<>();
			
			response.setError(e.getMessage());
			return ResponseEntity.badRequest().body(response);
		}
	}
}
